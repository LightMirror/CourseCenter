@model CourseSite.Models.DAL.Courses

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
    CourseSite.Models.DAL.CenterDBEntities db = new CourseSite.Models.DAL.CenterDBEntities();
}

<h2>@Resources.Main.Edit @Model.Course_EngName</h2>


@using (Html.BeginForm("Edit", "Course", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>@Resources.Main.Courses</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)
        <div class="row">
            <div class="col-md-2 col-md-push-9 text-center">
                <div class="form-group">
                    <span id="previewPane">
                        @if (!string.IsNullOrEmpty(Model.Course_ImgePath))
                        {
                            <img class="upload" onchange="readURL(this);" name="file" id="img_prev" src="@Url.Content(Model.Course_ImgePath)" alt="your image"
                                 style="width:250px;height:250px">
                        }
                        else
                        {
                            <img class="upload" onchange="readURL(this);" name="file" id="img_prev" src="~/Uploads/Gallary/defaultcourse.jpg" alt="your image"
                                 style="width:250px;height:250px">
                        }
                    </span>
                </div>
            </div>
            <div class="col-md-10 col-md-pull-2">
                <div class="form-group">
                    @Html.LabelFor(model => model.Course_EngName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Course_EngName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Course_EngName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Course_AraName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Course_AraName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Course_AraName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Course_VedioPath, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Course_VedioPath, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Course_VedioPath, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Course_ImgePath, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.ImageUpload, new { type = "file", id = "file", name = "file", onchange = "readURL(this);" })
                        @Html.ValidationMessageFor(model => model.Course_ImgePath, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Course_EngObjective, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.Course_EngObjective, 5, 38, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Course_EngObjective, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Course_AraObjective, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.Course_AraObjective, 5, 38, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Course_AraObjective, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Course_EngSummary, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.Course_EngSummary, 5, 38, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Course_EngSummary, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Course_AraSummary, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.Course_AraSummary, 5, 38, new { htmlAttributes = new { @class = "md-textarea form-control" } })
                        @Html.ValidationMessageFor(model => model.Course_AraSummary, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Course_StatusID, Resources.Main.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("Course_StatusID", new SelectList(db.Course_status, "ID", "Status_EngName", Model.Course_StatusID), htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Course_StatusID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Course_TotalHour, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Course_TotalHour, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Course_TotalHour, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Course_OrignalCost, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Course_OrignalCost, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Course_OrignalCost, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Course_OrignalCostDiscount, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Course_OrignalCostDiscount, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Course_OrignalCostDiscount, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Course_ISInMain, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.CheckBoxFor(model => model.InMain, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Course_ISInMain, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="@Resources.Main.Save" class="btn btn-default" />
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink(Resources.Main.BTL, "ShowCourses")
</div>


<script>

    var blank = "http://upload.wikimedia.org/wikipedia/commons/c/c0/Blank.gif";

    function readURL(input) {

        if (input.files && input.files[0]) {

            var reader = new FileReader();
            reader.onload = function (e) {

                $('#img_prev')

                    .attr('src', e.target.result)

                    .height(200);

            };
            reader.readAsDataURL(input.files[0]);

        }

        else {

            var img = input.value;

            $('#img_prev').attr('src', img).height(200);

        }

        $("#x").show().css("margin-right", "10px");

    }

    $(document).ready(function () {

        $("#x").click(function () {

            $("#img_prev").attr("src", blank);

            $("#x").hide();

        });

    });
</script>
<style type="text/css">
    .fileUpload {
        position: relative;
        overflow: hidden;
        margin: 10px;
    }

        .fileUpload input.upload {
            position: absolute;
            top: 0;
            right: 0;
            margin: 0;
            padding: 0;
            font-size: 20px;
            cursor: pointer;
            opacity: 0;
            filter: alpha(opacity=0);
        }

    .field-validation-error {
        color: #a94442;
    }
</style>

