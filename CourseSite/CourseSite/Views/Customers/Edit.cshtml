@model CourseSite.Models.DAL.Customers

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<h2>@Resources.Main.Edit</h2>


@using (Html.BeginForm("Edit", "Customers", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>@Resources.Main.Customers</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)
        <div class="row">
            <div class="col-md-4 col-md-push-8 text-center">
                <div class="form-group">
                    <span id="previewPane">
                        <img class="upload" onchange="readURL(this);" name="file" id="img_prev" src="~/Uploads/Gallary/defaultcourse.jpg" alt="your image"
                             style="width:250px;height:250px">
                    </span>
                </div>
            </div>
            <div class="col-md-8 col-md-pull-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.Customer_EngName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Customer_EngName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Customer_EngName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Customer_AraName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Customer_AraName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Customer_AraName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Customer_imagePath, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.ImageUpload, new { type = "file", id = "file", name = "file", onchange = "readURL(this);" })
                        @Html.ValidationMessageFor(model => model.Customer_imagePath, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Customer_Phone, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Customer_Phone, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Customer_Phone, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Customer_Mobile, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Customer_Mobile, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Customer_Mobile, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Customer_Birthdate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Customer_Birthdate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Customer_Birthdate, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Customer_Address, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Customer_Address, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Customer_Address, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Customer_Email, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Customer_Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Customer_Email, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Customer_Comment, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Customer_Comment, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Customer_Comment, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Customer_GenderId, Resources.Instractors.Instractor_Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("Customer_GenderId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Customer_GenderId, "", new { @class = "text-danger" })
                    </div>
                </div>                
                <div class="form-group">
                    @Html.LabelFor(model => model.Customer_Nid, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Customer_Nid, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Customer_Nid, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Customer_CorporateID, Resources.Cutomers.Corporate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("Customer_CorporateID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Customer_CorporateID, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Customer_statusID, Resources.Main.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("Customer_statusID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Customer_statusID, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>            
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="@Resources.Main.Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    </div>
}

        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>

        <script>

            var blank = "http://upload.wikimedia.org/wikipedia/commons/c/c0/Blank.gif";

            function readURL(input) {

                if (input.files && input.files[0]) {

                    var reader = new FileReader();
                    reader.onload = function (e) {

                        $('#img_prev')

                            .attr('src', e.target.result)

                            .height(200);

                    };
                    reader.readAsDataURL(input.files[0]);

                }

                else {

                    var img = input.value;

                    $('#img_prev').attr('src', img).height(200);

                }

                $("#x").show().css("margin-right", "10px");

            }

            $(document).ready(function () {

                $("#x").click(function () {

                    $("#img_prev").attr("src", blank);

                    $("#x").hide();

                });

            });
        </script>
        <style type="text/css">
            .fileUpload {
                position: relative;
                overflow: hidden;
                margin: 10px;
            }

                .fileUpload input.upload {
                    position: absolute;
                    top: 0;
                    right: 0;
                    margin: 0;
                    padding: 0;
                    font-size: 20px;
                    cursor: pointer;
                    opacity: 0;
                    filter: alpha(opacity=0);
                }

            .field-validation-error {
                color: #a94442;
            }
        </style>
